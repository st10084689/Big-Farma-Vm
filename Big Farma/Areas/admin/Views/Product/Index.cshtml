
<partial name="_Notification" />

@model IEnumerable<Product>

@{
    ViewData["Title"] = "Index";
}
<div class="container">
<h1>Products</h1>
    <button class="btn btn-info" id="sortButton">Sort Prices</button>
    <button class="btn btn-danger" id="sortDateButton">Sort Dates</button>
    @if(User.IsInRole("Admin")){
    <div class="form-group">
        <label for="exampleSelect1" class="form-label mt-4">Select Specific Farmer</label>
        <select class="form-select" id="exampleSelect1">
            <option value="">All</option>
            @foreach (var user in Model.Select(m => m.applicationUser.Name).Distinct())
            {
                <option value="@user">@user</option>
            }
        </select>
    </div>
    }
<p>
        <a asp-area="admin" asp-controller="Product" asp-action="Upsert" class="btn btn-lg btn-primary mt-2">Create New</a>
</p>
<table class="table table-hover">
    <thead>
            <tr class="table-secondary" >
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.category.CategoryName)
            </th>
                @if (User.IsInRole("Admin"))
                {
                    <th>
                       Farmer
                </th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
                <tr data-user ="@item.applicationUser.Name">
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.category.CategoryName)
                </td>
                @if(User.IsInRole("Admin")){
                <td>
                    Name:
                    @Html.DisplayFor(modelItem => item.applicationUser.Name)<br>
                    Email:
                    @Html.DisplayFor(modelItem=> item.applicationUser.Email)
                </td>

                 }
                <td>
                    <a asp-action="Upsert"  asp-route-id="@item.ID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
</div>
<script>
    var ascendingOrder = true;
    var ascendingDateOrder = true;

    document.getElementById("sortButton").addEventListener("click", function () {
        var tableBody = document.querySelector("tbody");
        var rows = tableBody.querySelectorAll("tr");
        var rowsArray = Array.from(rows);

        rowsArray.sort(function (a, b) {
            var priceA = parseFloat(a.cells[1].textContent);
            var priceB = parseFloat(b.cells[1].textContent);
            return ascendingOrder ? priceA - priceB : priceB - priceA;
        });

        tableBody.innerHTML = "";

        rowsArray.forEach(function (row) {
            tableBody.appendChild(row);
        });

        ascendingOrder = !ascendingOrder;
    });
    document.getElementById("sortDateButton").addEventListener("click", function () {
        var tableBody = document.querySelector("tbody");
        var rows = tableBody.querySelectorAll("tr");
        var rowsArray = Array.from(rows);

        rowsArray.sort(function (a, b) {
            var dateA = new Date(a.cells[2].textContent);
            var dateB = new Date(b.cells[2].textContent);
            return ascendingDateOrder ? dateA - dateB : dateB - dateA;
        });

        tableBody.innerHTML = "";

        rowsArray.forEach(function (row) {
            tableBody.appendChild(row);
        });

        ascendingDateOrder = !ascendingDateOrder;
    });
    document.getElementById("exampleSelect1").addEventListener("change", function () {
        var selectedUser = this.value;
        var tableRows = document.querySelectorAll("tbody tr");

        tableRows.forEach(function (row) {
            if (selectedUser === "" || row.getAttribute("data-user") === selectedUser) {
                row.style.display = "table-row";
            } else {
                row.style.display = "none";
            }
        });
    });
</script>

